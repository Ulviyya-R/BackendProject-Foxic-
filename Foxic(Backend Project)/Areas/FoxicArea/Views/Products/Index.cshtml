@model IEnumerable<Foxic_Backend_Project_.Entities.Product>

@{
    ViewData["Title"] = "Index";
}

@section CSS{
    <style>
        .PointerNone{
            pointer-events:none;
        }
    </style>
}
<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                Image
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DiscountPrice)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ShortDesc)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LongDesc)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Collection)
            </th>
           
            <th>
                ColorSize
            </th>
          
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
                <td>
                    <img class="primary-img" style="width:100px;height:100px; object-fit:contain"
                     src="~/assets/images/skins/fashion/products/@item.ProductImages.FirstOrDefault(x=>x.IsMain==true).Path"
                     alt="Product Images" />
                </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DiscountPrice)
            </td>
              
                <td>
                    @(item.ShortDesc.Length > 15 ? string.Concat(item.ShortDesc.Substring(0, 15), "...") : item.ShortDesc)
                </td>
                <td>
                            @(item.LongDesc.Length > 15 ? string.Concat(item.LongDesc.Substring(0, 15), "...") : item.LongDesc)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Collection.Name)
                </td>
                <td>
                                        @foreach (var colorSize in item.ProductSizeColors)
                                        {
                        <p style="background:black; color:white">
                         @colorSize.Size.Name ===> @colorSize.Color.Name ===> @colorSize.Quantity
                        </p>
                                        }
                </td>
              
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>

<nav class="mt-3 d-flex justify-content-center" aria-label="...">
    <ul class="pagination">
        <li class="page-item  @(ViewBag.CurrentPage == 1 ? "disabled" : "")">
            <a class="page-link" asp-action="Index" asp-route-page="@(ViewBag.CurrentPage-1)" tabindex="-1">Previous</a>
        </li>
        @for (int i = 1; i <= ViewBag.TotalPage; i++)
        {
            <li class="page-item @(i==ViewBag.CurrentPage ? "active PointerNone" : "")">
                <a class="page-link" asp-action="Index" asp-route-page="@i">@i</a>
            </li>
        }
        
        <li class="page-item @(ViewBag.TotalPage == ViewBag.CurrentPage ? "disabled" : "")">
            <a class="page-link" asp-action="Index" asp-route-page="@(ViewBag.CurrentPage+1)">Next</a>
        </li>
    </ul>
</nav>
